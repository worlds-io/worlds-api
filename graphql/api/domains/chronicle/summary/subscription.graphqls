input FilterSummaryChronicleInputSubscription @experimental {
    id: FilterIDInput
    name: FilterStringInput
    description: FilterStringInput
    startTime: FilterDateTimeOffsetInput
    endTime: FilterDateTimeOffsetInput
    timezone: FilterStringInput
    priority: FilterStringInput
    status: FilterStringInput
    chronicleProducerId: FilterIDInput
    validation: FilterStringInput
    labels: FilterStringListInput
    locations: FilterStringListInput
    and: [FilterSummaryChronicleInputSubscription!]
    or: [FilterSummaryChronicleInputSubscription!]
    not: FilterSummaryChronicleInputSubscription
}

extend type Subscription {
    """
    Subscribes to changes in any [`Event`]({{Types.event}}) based on the given filter.
    """
    summaryChronicles(
        """
        Filter events by unique identifier of the event producer or type of event, etc.
        """
        filter: FilterSummaryChronicleInputSubscription
    ): SummaryChronicle! @experimental
}