"""
FilterEventChronicleInput filters [EventChronicles]({{Types.EventChronicle}}) based on criteria described below.
Only one field should be provided per Filter object unless using an operator (`and` `or` `not`) as specified below.
"""
input FilterEventChronicleInputSubscription @experimental {
    """
    If provided, specifies filters that work against the `id` of the [`EventChronicle`]({{Types.EventChronicle}}).
    """
    id: FilterIDInput
    """
    If provided, specifies filters that work against the `name` of the [`EventChronicle`]({{Types.EventChronicle}}).
    """
    name: FilterStringInput
    """
    If provided, specifies filters that work against the `chronicleProducer` ID of the [`EventChronicle`]({{Types.EventChronicle}}).
    """
    chronicleProducerId: FilterIDInput
    """
    If provided, specifies filters that work against the `timestamp` of the [`EventChronicle`]({{Types.EventChronicle}}).
    """
    timestamp: FilterDateTimeOffsetInput
    """
    If provided, specifies filters that work against the `timezone` of the [`EventChronicle`]({{Types.EventChronicle}}).
    """
    timezone: FilterStringInput
    """
    If provided, specifies filters that work against the `priority` of the [`EventChronicle`]({{Types.EventChronicle}}).
    """
    priority: FilterStringInput
    """
    If provided, specifies filters that work against the `status` of the [`EventChronicle`]({{Types.EventChronicle}}).
    """
    status: FilterStringInput
    """
    If provided, specifies filters that work against the `validation` of the [`EventChronicle`]({{Types.EventChronicle}}).
    """
    validation: FilterStringInput
    """
    If provided, specifies filters that work against the `labels` of the [`EventChronicle`]({{Types.EventChronicle}}).
    """
    labels: FilterStringListInput
    """
    If provided, specifies filters that work against the `locations` of the [`EventChronicle`]({{Types.EventChronicle}}).
    """
    locations: FilterStringListInput
    """
    If provided, specifies filters that work against the `activityChronicle` IDs of the [`EventChronicle`]({{Types.EventChronicle}}).
    """
    and: [FilterEventChronicleInputSubscription!]
    """
    If provided, an event must pass all filters in this list to match the current filter.
    """
    or: [FilterEventChronicleInputSubscription!]
    """
    If provided, an event must pass at least one of the filters in this list to match the current filter.
    """
    not: FilterEventChronicleInputSubscription
}

extend type Subscription {
    """
    Subscribes to changes in any [`Event`]({{Types.Event}}) based on the given filter.
    """
    eventChronicles(
        """
        Filter events by unique identifier of the event producer or type of event, etc.
        """
        filter: FilterEventChronicleInputSubscription
    ): EventChronicle! @experimental
}