input FilterEventChronicleInputSubscription @experimental {
    id: FilterIDInput
    name: FilterStringInput
    timestamp: FilterDateTimeOffsetInput
    timezone: FilterStringInput
    priority: FilterStringInput
    status: FilterStringInput
    chronicleProducerId: FilterIDInput
    validation: FilterStringInput
    labels: FilterStringListInput
    locations: FilterStringListInput
    and: [FilterEventChronicleInputSubscription!]
    or: [FilterEventChronicleInputSubscription!]
    not: FilterEventChronicleInputSubscription
}

extend type Subscription {
    """
    Subscribes to changes in any [`Event`]({{Types.event}}) based on the given filter.
    """
    eventChronicles(
        """
        Filter events by unique identifier of the event producer or type of event, etc.
        """
        filter: FilterEventChronicleInputSubscription
    ): EventChronicle! @experimental
}