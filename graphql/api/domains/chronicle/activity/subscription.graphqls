input FilterActivityChronicleInputSubscription @experimental {
    id: FilterIDInput
    name: FilterStringInput
    chronicleProducerId: FilterIDInput
    startTime: FilterDateTimeOffsetInput
    endTime: FilterDateTimeOffsetInput
    timezone: FilterStringInput
    priority: FilterStringInput
    status: FilterStringInput
    validation: FilterStringInput
    labels: FilterStringListInput
    locations: FilterStringListInput
    siteIds: FilterIDListInput
    dataSourceIds: FilterIDListInput
    tagIds: FilterIDListInput
    pointOfInterestIds: FilterIDListInput
    and: [FilterActivityChronicleInputSubscription!]
    or: [FilterActivityChronicleInputSubscription!]
    not: FilterActivityChronicleInputSubscription
}

extend type Subscription {
    """
    Subscribes to changes in any [`Event`]({{Types.event}}) based on the given filter.
    """
    activityChronicles(
        """
        Filter events by unique identifier of the event producer or type of event, etc.
        """filter: FilterActivityChronicleInputSubscription
    ): ActivityChronicle! @experimental
}