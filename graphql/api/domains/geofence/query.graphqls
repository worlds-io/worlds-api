enum GeofencesSortField {
	ID,
	NAME
}

input GeofencesSort {
	field: GeofencesSortField!
	direction: SortDirection!
}

enum GeofenceEventsSortField {
	ID,
	OCCURRED
}

input GeofenceEventsSort {
	field: GeofenceEventsSortField!
	direction: SortDirection!
}

enum GeofenceIntersectionsSortField {
	ID,
	START_TIME
}

input GeofenceIntersectionsSort {
	field: GeofenceIntersectionsSortField!
	direction: SortDirection!
}

extend type Query {
	geofence(id: ID!): Geofence
	geofences(filter: FilterGeofenceInput, first: Int! = 20, after: String, sort: [GeofencesSort!]! = [{field: NAME, direction: ASC}, {field: ID, direction: ASC}]): GeofenceConnection
	geofenceEvents(filter: FilterGeofenceEventInput!, first: Int! = 20, after: String, sort: [GeofenceEventsSort!]! = [{field: OCCURRED, direction: ASC}, {field: ID, direction: ASC}]): GeofenceEventConnection @deprecated (reason: "geofenceEvents is deprecated, use geofenceIntersections instead")
	geofenceIntersections(filter: FilterGeofenceIntersectionInput!, first: Int! = 20, after: String, sort: [GeofenceIntersectionsSort!]! = [{field: START_TIME, direction: ASC}, {field: ID, direction: ASC}]): GeofenceIntersectionConnection
}