type EventProducer {
	id: ID!
	name: String!
	description: String
	timezone: String
	active: Boolean!
	metadata: JSON
}

input EventProducerInput {
	id: ID
	name: String!
	description: String
	timezone: String
	active: Boolean
	metadata: JSON
}

input UpdateEventProducerInput {
	id: ID!
	name: String
	description: String
	timezone: String
	active: Boolean
	metadata: JSON
}

type Event {
	id: ID!
	eventProducer: EventProducer!
	type: String!
	subType: String
	startTime: DateTimeOffset!
	endTime: DateTimeOffset
	position: GeoJSONPoint
	timezone: String
	metadata: JSON
	images: [Image!]!
	videos: [Video!]!
	properties: EventProperties
	draft: Boolean
	validation: EventValidation
}

type EventProperties {
	tracks: [Track!]
	sites: [Site!]
	dataSources: [DataSource!]
	tags: [Tag!]
	pointsOfInterest: [PointOfInterest!]
}

type EventValidation {
	status: EventValidationStatus!
	invalidReason: String
	invalidDescription: String
}

input CreateEventInput {
	id: ID
	eventProducerId: String!
	type: String!
	subType: String
	startTime: DateTimeOffset!
	endTime: DateTimeOffset
	position: GeoJSONPointInput
	timezone: String
	metadata: JSON
	snapshots: [CreateSnapshotInput!]
	uploads: [UploadImageInput!]
	clips: [CreateClipInput!]
	trackIds: [ID!]
	properties: EventPropertiesInput
	draft: Boolean! = false
	validation: EventValidationInput
}

input UpdateEventInput {
	id: ID!
	type: String
	subType: String
	startTime: DateTimeOffset
	endTime: DateTimeOffset
	position: GeoJSONPointInput
	timezone: String
	metadata: JSON
	snapshots: [CreateSnapshotInput!]
	uploads: [UploadImageInput!]
	clips: [CreateClipInput!]
	trackIds: [ID!]
	properties: EventPropertiesInput
	draft: Boolean
	validation: EventValidationInput
}

input EventPropertiesInput {
	siteIds: [ID!]
	dataSourceIds: [ID!]
	tags: [String!]
	pointOfInterestIds: [ID!]
}

enum EventValidationStatus {
	VALID
	INVALID
}

input EventValidationInput {
	status: EventValidationStatus!
	invalidReason: String
	invalidDetails: String
}