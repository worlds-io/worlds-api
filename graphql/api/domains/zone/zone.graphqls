type Zone {
    """The unique identifier for the camera zone."""
    id: ID!
    """The data source that owns the zone"""
    dataSource: DataSource
    """The name given to the camera zone."""
    name: String!
    """The geometrical boundry of the camera zone."""
    polygon: GeoJSONPolygon!
    """True if the zone is currently active, otherwise false."""
    active: Boolean!
    """The timestamp the zone was created at."""
    createdAt: DateTimeOffset
    """The timestamp the zone was most recently updated."""
    updatedAt: DateTimeOffset
    """
    The unique identifier for the camera the zone belongs to.
    """
    deviceId: ID! @deprecated(reason: "`deviceId` is deprecated. Use `dataSource.id` instead")
}

type ZoneEvent {
    """The unique idenifier for the zone event."""
    id: ID!
    """The camera zone the event happened in."""
    zone: Zone!
    """The track associated with the object that triggered the zone event."""
    track: Track!
    """
    [`zoneEvents`]({{Queries.zoneEvents}}) is deprecated in favor of [`zoneIntersections`]({{Queries.zoneIntersections}}),
    and `tag` will not be present on [`ZoneIntersection`]({{Types.ZoneIntersection}}).
    Use [track's tag]({{Types.Track}}) instead.

    The class label of the object that triggered the zone event, i.e person, car, truck, etc.
    """
    tag: String! @deprecated(reason: "tag is deprecated and can instead be retrieved from the track.")
    """
    [`zoneEvents`]({{Queries.zoneEvents}}) is deprecated in favor of [`zoneIntersections`]({{Queries.zoneIntersections}}),
    and `type` will not be present on [`ZoneIntersection`]({{Types.ZoneIntersection}}).

    The type of zone event, i.e ingress (an object entered the zone), dwell (an object remained in the zone), and egress.
    (an object exited the zone)
    """
    type: ActivityType! @deprecated(reason: "zoneEvent is deprecated in favor of zoneIntersection, which does not use type.")
    """The time at which the event started."""
    startTime: DateTimeOffset!
    """The time at which the event ended."""
    endTime: DateTimeOffset
    """
    [`zoneEvents`]({{Queries.zoneEvents}}) is deprecated in favor of [`zoneIntersections`]({{Queries.zoneIntersections}}),
    and `polygon` will not be present on [`ZoneIntersection`]({{Types.ZoneIntersection}}).

    The two-dimensional shape of the detection that triggered the event.
    """
    polygon: GeoJSONMultiPolygon @deprecated(reason: "zoneEvent is deprecated in favor of zoneIntersection, which does not use polygon.")
}

type ZoneIntersection {
    """The unique identifier for the zone intersection."""
    id: ID!
    """The camera zone the intersection happened in."""
    zone: Zone!
    """
    The track associated with the object that triggered the zone intersection.
    """
    track: Track!
    """The time at which the intersection started."""
    startTime: DateTimeOffset!
    """The time at which the intersection ended."""
    endTime: DateTimeOffset
}

type ZoneIntersectionMessage {
    """The zone intersection."""
    message: ZoneIntersection!
    """
    The state of the intersection message. Within the message, the [`endTime`]({{Types.ZoneIntersection}}) will only be present on an [`END`]({{Types.MessageState}}) event.
    """
    state: MessageState!
}

input CreateZoneInput {
    """The unique identifier of the data source that owns the zone"""
    dataSourceId: ID!
    """The name given to the camera zone."""
    name: String!
    """The geometrical boundry of the camera zone."""
    polygon: GeoJSONPolygonInput!
    """True if the zone is currently active, otherwise false."""
    active: Boolean
}

input UpdateZoneInput {
    """The unique identifier of the zone."""
    id: ID!
    """The unique identifier of the data source that owns the zone."""
    dataSourceId: ID
    """The name given to the camera zone."""
    name: String
    """The geometrical boundry of the camera zone."""
    polygon: GeoJSONPolygonInput
    """True if the zone is currently active, otherwise false."""
    active: Boolean
}