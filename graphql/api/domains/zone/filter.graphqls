"""
`FilterZoneInput` allows for filtering zones based on criteria described below.
Only one field should be provided per Filter object unless using an operator (`and` `or` `not`) as specified below.
"""
input FilterZoneInput {
    """
    If provided, specifies filters that work against the [unique id]({{Types.zone}}) of a zone.
    """
    id: FilterIDInput
    """
    If provided, specifies filters that work against the [name]({{Types.zone}}) of a zone.
    """
    name: FilterStringInput
    """
    If provided, specifies filters that work against the id of the [data source]({{Types.zone}}) that owns the zone.
    """
    dataSourceId: FilterIDInput
    """
    If provided, specifies filters that work against the [active]({{Types.zones}}) state of the zone
    """
    active: FilterBooleanInput
    """
    If provided, specifies filters that work against the [timestamp the zone was created at]({{Types.zones}}).
    """
    createdAt: FilterDateTimeOffsetInput
    """
    If provided, specifies filters that work against the [timestamp the zone was most recently updated]({{Types.zones}}).
    """
    updatedAt: FilterDateTimeOffsetInput
    """
    If provided, a detection activity must pass all filters in this list to match the current filter.
    """
    and: [FilterZoneInput!]
    """
    If provided, a detection activity must pass at least one of the filters in this list to match the current filter.
    """
    or: [FilterZoneInput!]
    """
    If provided, a detection activity may not match this filter to match the current filter.
    """
    not: FilterZoneInput
}

"""
`FilterZoneEventInput` allows for filtering a zone event based on criteria described below.
Only one field should be provided per Filter object unless using an operator (`and` `or` `not`) as specified below.
"""
input FilterZoneEventInput {
    """
    If provided, specifies filters that work against the [unique id]({{Types.zoneevent}}) of a zone event.
    """
    zoneId: FilterIDInput
    """
    If provided, specifies filters that work against the [timestamp]({{Types.zoneevent}}) associated with the zone event.
    """
    time: FilterDateTimeOffsetInput!
    """
    If provided, a detection activity must pass all filters in this list to match the current filter.
    """
    and: [FilterZoneEventInput!]
    """
    If provided, a detection activity must pass at least one of the filters in this list to match the current filter.
    """
    or: [FilterZoneEventInput!]
    """
    If provided, a detection activity may not match this filter to match the current filter.
    """
    not: FilterZoneEventInput
}

"""
`FilterZoneIntersectionInput` allows for filtering a zone intersection based on criteria described below.
Only one field should be provided per Filter object unless using an operator (`and` `or` `not`) as specified below.
"""
input FilterZoneIntersectionInput {
    """
    If provided, specifies filters that work against the [unique id]({{Types.zoneintersection}}) of a zone intersection.
    """
    zoneId: FilterIDInput
    """
    Specifies filters that work against the [startTime]({{Types.zoneintersection}}) associated with the zone intersection.
    """
    time: FilterDateTimeOffsetInput!
    """
    Specifies filters that work against the [tag]({{Types.track}}) associated with the zone intersection.
    """
    tag: FilterStringInput
    """
    Specifies filters that work against the [dataSource]({{Types.zone}}) associated with the zone intersection.
    """
    dataSourceId: FilterIDInput
    """
    If provided, a detection activity must pass all filters in this list to match the current filter.
    """
    and: [FilterZoneIntersectionInput!]
    """
    If provided, a detection activity must pass at least one of the filters in this list to match the current filter.
    """
    or: [FilterZoneIntersectionInput!]
    """
    If provided, a detection activity may not match this filter to match the current filter.
    """
    not: FilterZoneIntersectionInput
}

"""
`FilterZoneIntersectionMessageInput` allows for filtering a zone intersection subscription based on criteria described below.
Only one field should be provided per Filter object unless using an operator (`and` `or` `not`) as specified below.
"""
input FilterZoneIntersectionMessageInput {
    """
    If provided, specifies filters that work against the [unique id]({{Types.zoneintersection}}) of the zone collided with.
    """
    zoneId: FilterIDInput
    """
    Specifies filters that work against the [dataSource]({{Types.track}}) associated with the zone intersection's [track]({{Types.zoneintersection}}).
    """
    dataSourceId: FilterIDInput
    """
    Specifies filters that work against the [state](/reference/enums/#messagestate) of the zone intersection message.
    """
    state: FilterMessageStateInput
    """
    If provided, a detection activity must pass all filters in this list to match the current filter.
    """
    and: [FilterZoneIntersectionMessageInput!]
    """
    If provided, a detection activity must pass at least one of the filters in this list to match the current filter.
    """
    or: [FilterZoneIntersectionMessageInput!]
    """
    If provided, a detection activity may not match this filter to match the current filter.
    """
    not: FilterZoneIntersectionMessageInput
}