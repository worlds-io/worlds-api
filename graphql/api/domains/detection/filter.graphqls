"""
FilterDetectionInput allows for filtering a detection based on criteria described below.
Only one field should be provided per Filter object unless using an operator (`and` `or` `not`) as specified below
"""
input FilterDetectionInput {
    """
    If provided, specifies filters that work against the unique id of the data source]({{Types.datasource}}) that initiated the detection.
    """
    dataSourceId: FilterIDInput
    """
    If provided, specifies filters that work against the unique id of the detection's [track]({{Types.track}}).
    """
    trackId: FilterIDInput
    """
    If provided, specifies filters that work against the unique id of the zone in which a zone event was triggered by the [detection]({{Types.detection}}).
    """
    zoneId: FilterIDInput
    """
    If provided, specifies filters that work against the unique id of the geofence in which a geofence event was triggered by the [detection]({{Types.detection}}).
    """
    geofenceId: FilterIDInput
    """
    If provided, specifies case-insensitive filters that work against the tag associated with the [detection]({{Types.detection}}).
    """
    tag: FilterStringInput
    """
    If provided, specifies filters that work against the timestamp associated with the [detection]({{Types.detection}}).
    """
    time: FilterDateTimeOffsetInput!
    """
    If provided, specifies filters that work against the position of the [detection]({{Types.detection}})
    """
    position: FilterPointInput
    """
    If provided, a detection must pass all filters in this list to match the current filter.
    """
    and: [FilterDetectionInput!]
    """
    If provided, a detection must pass at least one of the filters in this list to match the current filter.
    """
    or: [FilterDetectionInput!]
    """
    If provided, a detection may not match this filter to match the current filter.
    """
    not: FilterDetectionInput
    """
    If provided, specifies filters that work against the [unique id]({{Types.detection}}) of the device that initiated the detection.
    """
    deviceId: FilterIDInput @deprecated(reason: "deviceId is deprecated use dataSourceId instead")
}

"""
FilterDetectionActivityInput allows for filtering a detection activity based on criteria described below.
Only one field should be provided per Filter object unless using an operator (`and` `or` `not`) as specified below.
"""
input FilterDetectionActivityInput {
    """
    If provided, specifies filters that work against the unique id of the [data source]({{Types.dataSource}}) that initiated the detection activity.
    """
    dataSourceId: FilterIDInput
    """
    If provided, specifies filters that work against the unique id of the zone in which a zone event was triggered by the [detection]({{Types.detection}}).
    """
    zoneId: FilterIDInput
    """
    If provided, specifies filters that work against the unique id of the geofence in which a geofence event was triggered by the [detection]({{Types.detection}}).
    """
    geofenceId: FilterIDInput
    """
    If provided, specifies case-insensitive filters that work against the tag associated with the [detection]({{Types.detection}}) activity.
    """
    tag: FilterStringInput
    """
    If provided, specifies filters that work against the position of the [detection]({{Types.detection}})
    """
    position: FilterPointInput
    """
    If provided, a detection activity must pass all filters in this list to match the current filter.
    """
    and: [FilterDetectionActivityInput!]
    """
    If provided, a detection activity must pass at least one of the filters in this list to match the current filter.
    """
    or: [FilterDetectionActivityInput!]
    """
    If provided, a detection activity may not match this filter to match the current filter.
    """
    not: FilterDetectionActivityInput
    """
    If provided, specifies filters that work against the [unique id]({{Types.detection}}) of the device that initiated the detection activity.
    """
    deviceId: FilterIDInput @deprecated(reason: "`deviceId` is deprecated. Use `dataSourceId` instead")
}