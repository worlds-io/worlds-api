"""
Detections are the lowest level unit of computer vision primitive within Worlds.
A detection represents a single frame of a recognized object, which then has
additional data associated with it, including its position, track, and
interactions with zones and geofences.
"""
type Detection {
    """The track that is associated with the detection."""
    track: Track!
    """The time at which the detection occurred."""
    timestamp: DateTimeOffset!
    """Information about the video frame in which this detection was captured"""
    frame: Frame
    """A GeoJSON polygon that represents the spatial bounds of the detection."""
    polygon: GeoJSONPolygon
    """
    A GeoJSON point that represents the location of the detection in the world. This value may be `null` if the camera that captured the detection hasn't been calibrated. It may also be `null` if the location cannot be calculated (i.e the detected object is in the sky).
    """
    position: GeoJSONPoint
    """
    A list of [Zones]({{Types.zone}}) with which the detection intersects.
    """
    zones: [Zone!]!
    """
    A list of [Geofences]({{Types.geofence}}) with which the detection intersects.
    """
    geofences: [Geofence!]!
    """Arbitrary metadata associated with the detection."""
    metadata: JSON
    """
    Timestamp that the detection was created. May be delayed from the
    `timestamp` due to post-processing video feeds or other latency.
    """
    createdAt: DateTimeOffset
    """Timestamp that the detection was most recently updated."""
    updatedAt: DateTimeOffset
    """
    The direction in which the detection is moving, represented in degrees.
    """
    direction: Float
    """
    A list of [geofence]({{Queries.geofence}}) unique identifiers with which the
    detection intersects.
    """
    geofenceIds: [ID!]! @deprecated(reason: "`geofenceIds` is deprecated. Use `geofences.id` instead")
    """
    A list of [zone]({{Queries.zone}}) unique identifiers with which the
    detection intersects.
    """
    zoneIds: [ID!]! @deprecated(reason: "`zoneIds` is deprecated. Use `zones.id` instead")
    """A list of zone events related to this detection."""
    zoneEvents: [ZoneEvent!]! @deprecated(reason: "`zoneEvents` is deprecated. Use `track.zoneEvents` instead")
    """A list of geofence events related to this detection."""
    geofenceEvents: [GeofenceEvent!]! @deprecated(reason: "`geofenceEvents` is deprecated. Use `track.geofenceEvents` instead")
    """
    The global track id that governs the detection, if any.
    """
    globalTrackId: String @deprecated(reason: "`globalTrackId` is deprecated. Use `track.id` instead")
    """
    The unique identifier of the device where the detection occurred.
    """
    deviceId: ID @deprecated(reason: "`deviceId` is deprecated. Use `track.dataSourceId.id` instead")
    """
    The class label of the detected object, i.e person, car, truck, etc.
    """
    tag: String! @deprecated(reason: "`tag` is deprecated. Use `track.tag` instead")
}

"""
This type is used to create a new [`Detection`]({{Types.detection}})
"""
input CreateDetectionInput {
    """The id of the track that governs the detection"""
    trackId: ID!
    """The time at which the detection occurred."""
    timestamp: DateTimeOffset!
    """
    A GeoJSON point that represents the location of the detection in the world.
    """
    position: GeoJSONPointInput
    """
    A GeoJSON polygon that represents the two dimensional bounds of the detection in its captured video or image.
    """
    polygon: GeoJSONPolygonInput
    """
    The direction, in degrees, of the detection in the world.
    Direction is measured clockwise from north, so `0` is north, `90` is east, `180` is south and `270` is west.
    The direction should be between `0` and `360` degrees.
    """
    direction: Float
    """Arbitrary metadata associated with the detection."""
    metadata: JSON
}