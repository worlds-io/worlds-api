"""
Two Dimensional Objects
"""
type Detection {
	id: ID!
	deviceId: Int!
	tag: String!
	timestamp: DateTimeOffset!	
	box: Box!
	track: Track
	metadata: JSON
}

type Track {
	id: ID!
	tag: String!
	startTime: DateTimeOffset!
	endTime: DateTimeOffset
	detections: [Detection!]!
	metadata: JSON
}

"""
Three Dimensional Objects
"""
type Waypoint {
	id: ID
	tag: String!
	timestamp: DateTimeOffset!
	position: GeographicPosition!
	route: Route
	metadata: JSON
}

type Route {
	id: ID
	tag: String!
	startTime: DateTimeOffset!
	endTime: DateTimeOffset
	waypoint: [Waypoint!]!
	metadata: JSON
}

"""
Zones
TODO: Is the zone geometry going to be a postgis geometry or separate x/y/width/height fields?
"""
type Zone {
	id: ID!
	deviceId: Int!
	geometry: String! 
}

type ZoneEvent {
	id: ID!
	zone: Zone!
	track: Track!
	tag: String!
	type: String!
	box: Box!
	timestamp: DateTimeOffset!
	metadata: JSON
}

"""
Geofences
"""
type Geofence {
	id: ID!
	name: String!
	position: GeographicPosition
	rotation: Vector3
	dimensions: Vector3
}

type GeofenceEvent {
	id: ID!
	geofence: Geofence!
	route: Route!
	tag: String!
	type: String!
	position: GeographicPosition!
	timestamp: DateTimeOffset!
	metadata: JSON
}

"""
Sensors
"""
type Sensor {
	id: ID!
	deviceId: Int!
	name: String!
	geometry: String!
	configuration: JSON
}

type SensorEvent {
	id:ID!
	sensor: Sensor!
	data: String!
	timestamp: DateTimeOffset
	metadata: JSON
}

"""
Utilities
"""
type TrackConnection {
	pageInfo: PageInfo!
	edges: [TrackEdge!]!
}

type TrackEdge {
	node: Track,
	cursor: String!
}

type RouteConnection {
	pageInfo: PageInfo!
	edges: [RouteEdge!]!
}

type RouteEdge {
	node: Route,
	cursor: String!
}
