
"""
Standard filtration for ID fields
"""
input FilterIDInput {
  ne: ID # "not equal to"
  eq: ID # "equal to"
  in: [ID!]
}

"""
Standard filtration for integer fields
"""
input FilterIntInput {
  ne: Int # "not equal to"
  eq: Int # "equal to"
  le: Int # "less than or equal to"
  lt: Int # "less than"
  ge: Int # "greater than or equal to"
  gt: Int # "greater than"
  in: [Int!]
  between: [Int!]
  attributeExists: Boolean
}

"""
Standard filtration for float fields
"""
input FilterFloatInput {
  ne: Float # "not equal to"
  eq: Float # "equal to"
  le: Float # "less than or equal to"
  lt: Float # "less than"
  ge: Float # "greater than or equal to"
  gt: Float # "greater than"
  in: [Float!]
  between: [Float!]
  attributeExists: Boolean
}

"""
Standard filtration for string fields
"""
input FilterStringInput {
  ne: String # "not equal to"
  eq: String # "equal to"
  like: String
  in: [String!]
  attributeExists: Boolean
}

"""
Standard filtration for DateTimeOffset fields
"""
input FilterDateTimeOffsetInput {
  eq: DateTimeOffset # "equal to"
  between: [DateTimeOffset!]
  attributeExists: Boolean
}

"""
Standard filtration for boolean fields
"""
input FilterBooleanInput {
  eq: Boolean
  ne: Boolean
  attributeExists: Boolean
}

"""
Filtration for position fields
"""
input FilterPointInput {
  in: GeoJSONPolygonInput
  near: FilterPointNearInput
  attributeExists: Boolean
}

input FilterPointNearInput {
  point: GeoJSONPointInput!
  radius: Float! = 500.0
}

"""
Filtration for Activity subscriber statuses
"""
input FilterMessageStateInput {
  eq: MessageState
  ne: MessageState
  in: [MessageState!]
}